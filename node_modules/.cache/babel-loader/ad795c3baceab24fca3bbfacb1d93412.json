{"ast":null,"code":"var _jsxFileName = \"/Users/mallikarjunareddy/Desktop/react/conviva/my-users-list/src/components/user-list/user-list.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUsers } from '../../utils/fetch.data';\nimport { setCurrentUser, updateUsersList, fetchUsersStart } from '../../redux/users/user.actions';\nimport Loader from '../common/loader/loader.component';\nimport './user-list.styles.css';\n\nclass UserList extends React.Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //     isLoading: true \n    // }\n  }\n\n  async componentDidMount() {\n    const {\n      updateUsersList,\n      fetchUsersStart\n    } = this.props;\n    fetchUsersStart(); // const data = await fetchUsers();\n    // updateUsersList(data);\n    // this.setState({\n    //     isLoading: false \n    // });\n  }\n\n  render() {\n    const {\n      users,\n      isLoading,\n      errorMessage,\n      currentUser\n    } = this.props.userData;\n    const {\n      setCurrentUser\n    } = this.props;\n    return isLoading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, \"Customer List\")), errorMessage ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, errorMessage) : /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    }, \"Id\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 37\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    }, \"Age\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 37\n      }\n    }, \"phone\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, Object.keys(users).map(id => {\n      const user = users[id];\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        className: currentUser.id === user.id ? 'active' : '',\n        key: user.email,\n        onClick: () => setCurrentUser(user),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 49\n        }\n      }, user.id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 49\n        }\n      }, user.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 49\n        }\n      }, user.age), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 49\n        }\n      }, user.phone));\n    }))));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => ({\n  userData: state.usersData\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user)),\n  fetchUsersStart: () => dispatch(fetchUsersStart())\n}); //    updateUsersList: users => dispatch(updateUsersList(users)),\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);","map":{"version":3,"sources":["/Users/mallikarjunareddy/Desktop/react/conviva/my-users-list/src/components/user-list/user-list.component.jsx"],"names":["React","connect","fetchUsers","setCurrentUser","updateUsersList","fetchUsersStart","Loader","UserList","Component","constructor","props","componentDidMount","render","users","isLoading","errorMessage","currentUser","userData","Object","keys","map","id","user","email","name","age","phone","mapStateToProps","state","usersData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUsers } from '../../utils/fetch.data';\n\nimport { setCurrentUser, updateUsersList, fetchUsersStart } from '../../redux/users/user.actions';\n\nimport Loader from '../common/loader/loader.component';\n\nimport './user-list.styles.css';\n\nclass UserList extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.state = {\n        //     isLoading: true \n        // }\n    }\n    async componentDidMount() {\n        const { updateUsersList, fetchUsersStart } = this.props;\n        fetchUsersStart();\n        // const data = await fetchUsers();\n        // updateUsersList(data);\n        // this.setState({\n        //     isLoading: false \n        // });\n    }\n    render() {\n        const { users, isLoading, errorMessage, currentUser } = this.props.userData;\n        const { setCurrentUser } = this.props;\n        return isLoading ? (\n            <Loader />\n        ) : (\n            <div className=\"user-list\">\n                <div className=\"text-left\">\n                    <h4>Customer List</h4>\n                </div>\n                {\n                    errorMessage ? (\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {errorMessage}\n                        </div>\n                    ) : ( \n                        <table className=\"table\">\n                            <thead className=\"thead-dark\">\n                                <tr>\n                                    <th scope=\"col\">Id</th>\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">Age</th>\n                                    <th scope=\"col\">phone</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    Object.keys(users).map(id => {\n                                        const user = users[id];\n                                        return (\n                                            <tr className={currentUser.id === user.id ? 'active' : ''} \n                                                key={user.email} onClick={ () => setCurrentUser(user)}>\n                                                <td>{user.id}</td>\n                                                <td>{user.name}</td>\n                                                <td>{user.age}</td>\n                                                <td>{user.phone}</td>\n                                            </tr>\n                                        );\n                                    })\n                                }\n                            </tbody>\n                        </table>\n                    )\n                }\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    userData: state.usersData,\n})\nconst mapDispatchToProps = dispatch => ({\n    setCurrentUser: user => dispatch(setCurrentUser(user)),\n    fetchUsersStart: () => dispatch(fetchUsersStart())\n})\n//    updateUsersList: users => dispatch(updateUsersList(users)),\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);\n"]},"metadata":{},"sourceType":"module"}